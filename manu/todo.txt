	ü•á ETAPA 1: Lo esencial para navegar la tienda

Objetivo: tener una tienda navegable, visual y funcional aunque sea sin pago todav√≠a.
	1.	producto.html
	‚Ä¢	Mostrar detalles del producto seg√∫n ?id=...
	‚Ä¢	Cargar los datos desde el JSON o backend.
	‚Ä¢	Mostrar t√≠tulo, imagen, descripci√≥n completa, precio, rebajas si hay, bot√≥n ‚ÄúA√±adir al carrito‚Äù.
	2.	about.html
	‚Ä¢	Contenido libre. Imagen de Ana, texto bonito, link a RRSS, etc.
	‚Ä¢	Puede usar el mismo CSS base.
	3.	Popup de carrito
	‚Ä¢	Modal fijo a la derecha o pantalla completa en m√≥vil.
	‚Ä¢	Mostrar lista de productos del carrito, totales y bot√≥n ‚ÄúPAGAR‚Äù.
	‚Ä¢	A√±adir bot√≥n en la esquina superior derecha para abrirlo.

‚∏ª

ü•à ETAPA 2: Funcionalidad completa

Objetivo: permitir realizar pedidos y registrar stock.
	4.	Conectar backend en Render
	‚Ä¢	Subir index.js y productos.json.
	‚Ä¢	Actualizar fetch("./productos.json") por fetch("https://backend.render.com/productos").
	5.	Bot√≥n ‚ÄúPAGAR‚Äù funcional
	‚Ä¢	Hacer que recoja el carrito y lo env√≠e v√≠a POST a /pedido.
	‚Ä¢	Mostrar confirmaci√≥n (alerta o modal).
	6.	Stock Manager para Ana
	‚Ä¢	P√°gina secreta (admin.html) con formulario de edici√≥n y subida.
	‚Ä¢	Mostrar lista editable de productos y/o bot√≥n para subir uno nuevo.
	‚Ä¢	Subida de foto = base64 o usar un servicio externo (imgur, Cloudinary).
	‚Ä¢	Conexi√≥n al endpoint /editar-stock.

‚∏ª

ü•â ETAPA 3: Mejoras de experiencia y est√©tica

Objetivo: que la tienda sea m√°gica y divertida.
	7.	Animaciones de aparici√≥n en scroll
	‚Ä¢	Cada .producto aparece con efecto (e.g. fade in + scale).
	‚Ä¢	Usar IntersectionObserver para activarlo al entrar en viewport.
	8.	Filtro arriba a la derecha
	‚Ä¢	Selector desplegable o botones: por categor√≠a, stock, rebajas.
	‚Ä¢	Orden por:
	‚Ä¢	Categor√≠a ‚Üí orden alfab√©tico
	‚Ä¢	Stock ‚Üí mayor disponibilidad primero
	‚Ä¢	Rebajas ‚Üí precio rebajado ascendente
	9.	Animaciones al a√±adir al carrito
	‚Ä¢	Efecto visual al hacer click en un producto (por ejemplo, volar la imagen al carrito).

‚∏ª

üß™ ETAPA 4: Pagos

Objetivo: pruebas con cobros reales.
	10.	Pruebas con Stripe

	‚Ä¢	Registrar cuenta.
	‚Ä¢	Crear link de checkout r√°pido o integrar bot√≥n con Stripe.js.
	‚Ä¢	C√°lculo de totales, gastos de env√≠o, comisi√≥n (puede ir en el popup de carrito).

	11.	Panel secreto seguro

	‚Ä¢	Como dices: si Ana solo tiene el link, es suficiente por ahora.
	‚Ä¢	(En el futuro podr√≠as a√±adir clave o auth b√°sica si hace falta.)

‚∏ª

¬øQuieres que empecemos ahora con el producto.html? Puedo montarte el esqueleto base en un minuto üèóÔ∏è
    
    
    
    
    
    ‚Ä¢	Integraci√≥n con un frontend que consuma estos endpoints.
	‚Ä¢	Implementar el sistema de pagos con Stripe, gestionando el c√°lculo total del carrito (productos, env√≠os, impuestos).
	‚Ä¢	Testeo autom√°tico para robustecer el proyecto (opcional pero recomendado).
	‚Ä¢	Desplegar la aplicaci√≥n en Render para hacerlo accesible desde Internet.

    que el raton sea custom hehe
    que las colecciones se creen a partir de lo que haya escrito ana katana
    como se ven los articulos soldout (grayscale) (o inverted) (la imagen digo eh)
    y los articulos en rebajas (igual un texto? como un sup? y que el precio est√© el rebajado y el original en un sup tachado)